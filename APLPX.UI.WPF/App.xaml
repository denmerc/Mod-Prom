<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local ="clr-namespace:APLPX.UI.WPF"
    xmlns:views ="clr-namespace:APLPX.UI.WPF.Views"
    xmlns:vm ="clr-namespace:APLPX.UI.WPF.ViewModels"
     xmlns:vma ="clr-namespace:APLPX.UI.WPF.ViewModels.Analytic"
    xmlns:vmp ="clr-namespace:APLPX.UI.WPF.ViewModels.Pricing"
	x:Class="APLPX.UI.WPF.App"
	StartupUri="MainWindow.xaml">
	<Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary>
                    <!--<ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Resources/Icons.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>-->
                    <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />-->

                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />-->

                

            </ResourceDictionary.MergedDictionaries>



                <!-- Application Brushes -->
                <SolidColorBrush x:Key="ApplicationBackground" Color="LightGray"/>
                <SolidColorBrush x:Key="ApplicationForeground" Color="DarkGray"/>
                <SolidColorBrush x:Key="ApplicationTextForeground" Color="DarkSlateGray"/>
                <SolidColorBrush x:Key="ApplicationHighlight" Color="White"/>

                <Style
				        x:Key="ButtonFocusVisual">
                    <Setter
					Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="MetroButton" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                    <Setter Property="Background" Value="#EEEEEEEE"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10 5"/>
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Border
									x:Name="Border"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}" />

                                    <ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									RecognizesAccessKey="True" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="OpacityMask" Value="#AA888888"/>
                                        <Setter Property="Margin" Value="2 1" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Background" Value="DimGray"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="#ADADAD"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- Application Styles -->

            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#FF333337"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter Property="Background" Value="#FF3F3F46"/>-->
                                </Trigger>
                                <!--<Trigger Property="IsFocused" Value="True">
            						<Setter Property="Background" Value="#FF3F3F46"/>
            					</Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
                <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
                <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                <Setter Property="Background" Value="#FF3F3F46"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Margin="4,0,4,4">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="8,5"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="ApplicationText">
                    <Setter Property="Foreground" Value="{StaticResource ApplicationTextForeground}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style TargetType="{x:Type TextBlock}" x:Key="ListItemTextStyle">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style TargetType="{x:Type TextBlock}" x:Key="ListTextStyle">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Style>

                <ControlTemplate TargetType="{x:Type Button}" x:Key="GoButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="{TemplateBinding Background}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="LightSlateGray"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="White"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding Foreground}"
						BorderThickness="1"
						Padding="10">
                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBackgroundBrush" 
								Color="{TemplateBinding Background}" />
                            </Border.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
								HorizontalAlignment="Left" />




                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>

                <ControlTemplate TargetType="{x:Type Button}" x:Key="GoButtonActive">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="{TemplateBinding Background}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="LightSlateGray"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0"
										Storyboard.TargetName="ButtonBackgroundBrush"
										Storyboard.TargetProperty="Color" To="White"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding Foreground}"
						BorderThickness="2"
						Padding="10">
                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBackgroundBrush" 
								Color="{TemplateBinding Background}" />
                            </Border.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
								HorizontalAlignment="Left" />




                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
                <Style TargetType="{x:Type Button}" x:Key="GoButtonStyle">
                    <Setter Property="Foreground" Value="{StaticResource ApplicationTextForeground}"/>
                    <Setter Property="Background" Value="{StaticResource ApplicationBackground}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="7,3"/>
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Template" Value="{StaticResource GoButton}" />
                    <Setter Property="Height" Value="60"/>
                </Style>

                <Style TargetType="{x:Type Button}" x:Key="GoButtonStyleActive">
                    <Setter Property="Foreground" Value="{StaticResource ApplicationTextForeground}"/>
                    <Setter Property="Background" Value="{StaticResource ApplicationBackground}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="7,3"/>
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Template" Value="{StaticResource GoButtonActive}" />
                    <Setter Property="Height" Value="60"/>

                </Style>

                <Style x:Key="Flat">
                    <Setter Property="Control.Background" Value="LightGray" />
                    <Setter Property="Control.BorderBrush" Value="DarkGray" />
                    <Setter Property="Control.BorderThickness" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Control.Background" Value="{x:Null}" />
                            <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="True">
                            <Setter Property="Control.FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            <DataTemplate DataType="{x:Type vm:HomeSearchViewModel}">
                <local:HomeVerticalControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AnalyticModuleViewModel}">
                <local:AnalyticStepsControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:PricingModuleViewModel}">
                <local:PricingStepsControl />
            </DataTemplate>

            <DataTemplate DataType="{x:Type vmp:IdentityViewModel}">
                <local:PricingIdentityStepControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vma:IdentityViewModel}">
                <local:AnalyticIdentityStepControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vmp:FilterViewModel}">
                <local:FilterStepControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vma:FilterViewModel}">
                <local:FilterStepControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vma:DriverViewModel}">
                <local:AnalyticValueDriversStepControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vma:ResultsViewModel}">
                <local:AnalyticResultsControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:FolderSettingsViewModel}">
                <views:FolderSettingsControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AdminModuleViewModel}">
                <local:AdminControl />
            </DataTemplate>
        </ResourceDictionary>


    </Application.Resources>
</Application>